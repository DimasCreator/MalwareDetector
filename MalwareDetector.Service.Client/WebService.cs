using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Http.Internal;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;

namespace MalwareDetector.Service.Client
{
    public class WebService
    {
        private HttpClient _client = new HttpClient();
        private string _uri = "https://localhost:5001/api/Scan";

        public async Task<string> GetStatusById(string id)
        {
            var currentUri = _uri + "/" + id;
            var response = await _client.GetAsync(currentUri);
            return await response.Content.ReadAsStringAsync();
        }

        public async Task<string> SendScaningRequest(string path)
        {
            IEnumerable<IFormFile> files = Directory.GetFiles(path, "*", SearchOption.AllDirectories).Select(f => ConvertToFormFile(f)).ToArray();
            var content = new MultipartFormDataContent();
            foreach (var formFile in files)
            {
                content.Add(CreateFileContent(formFile.OpenReadStream(), formFile.FileName, "file/*"));
            }
            var response = await _client.PostAsync(_uri, content);
            return await response.Content.ReadAsStringAsync();
        }

        private StreamContent CreateFileContent(Stream stream, string fileName, string contentType)
        {
            var fileContent = new StreamContent(stream);
            fileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data")
            {
                Name = "\"files\"",
                FileName = "\"" + fileName + "\""
            };
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(contentType);
            return fileContent;
        }

        private FormFile ConvertToFormFile(string filePath)
        {
            var stream = new MemoryStream(File.ReadAllBytes(filePath).ToArray());
            FormFile file = new FormFile(stream, 0, stream.Length, filePath, Path.GetFileName(filePath));
            file.Headers = new HeaderDictionary();
            return file;
        }
    }
}
