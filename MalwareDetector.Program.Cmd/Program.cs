using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using MalwareDetector.BusinessLogic;

namespace MalwareDetector.Program.Cmd
{
    class Program
    {
        static void Main(string[] args)
        {
            string path;
            if(args.Length != 0)
            {
                path = args[0];
            }
            else
            {
                throw new Exception("Не переданы аргументы");
            }
            if (!Directory.Exists(path))
            {
                throw new Exception("Данной директории не существует");
            }

            var scanRules = new[] { 
                new ScanRule("JS", "<script>evil_script()</script>", ".js"),
                new ScanRule("rm -rf", @"rm -rf %userprofile%\Documents"),
                new ScanRule("Rundll32", "Rundll32 sus.dll SusEntry")
            };

            var report = new ScanService(path, scanRules).Run();

            ReportDisplay(report);
        }

        /// <summary>
        /// Выводит в консоль информацию отчета по сканированию.
        /// </summary>
        /// <param name="report">Объект, содержащий данные о сканировании.</param>
        /// <param name="scanRule">Список используемых правил.</param>
        /// <returns>Строка информации отчета.</returns>
        private static void ReportDisplay(ScanReport report)
        {
            StringBuilder reportBuilder = new StringBuilder("====== Scan result ======\n");
            reportBuilder.AppendLine("Processed files: " + report.GetAmount());
            foreach (var rule in report.GetScanRules())
            {
                reportBuilder.AppendLine(rule.RuleName + " detected: " + report.GetAmountByRule(rule));
            }
            reportBuilder.AppendLine("Errors: " + report.GetAmountByType(FileReportType.Error));
            reportBuilder.AppendLine("Execution time: " + report.GetScanningTime());
            reportBuilder.AppendLine("=========================");
            Console.WriteLine(reportBuilder.ToString());
        }
    }
}
