using System.Text;

namespace MalwareDetector.BusinessLogic
{
    /// <summary>
    /// Класс предоставляющий стороннему ПО доступ к сканированию.
    /// </summary>
    public class ScanService
    {
        /// <summary>
        /// Путь к сканируемой директории.
        /// </summary>
        public string DirectoryPath { get; }
        /// <summary>
        /// Коллекция правил сканирования.
        /// </summary>
        public ScanRule[] ScanRules { get; }
        /// <summary>
        /// Конструктор.
        /// </summary>
        /// <param name="directoryPath">Путь к сканируемой директории.</param>
        /// <param name="scanRules"Коллекция правил сканирования.</param>
        public ScanService(string directoryPath, ScanRule[] scanRules)
        {
            DirectoryPath = directoryPath;
            ScanRules = scanRules;
        }
        /// <summary>
        /// Запуск процесса сканирования директории
        /// </summary>
        /// <returns>Строка информации отчета сканирования.</returns>
        public string Run()
        {
            Scanner scanner = new Scanner(DirectoryPath, ScanRules);
            return CreateReport(scanner.Scan());
        }

        /// <summary>
        /// Создает строку для отображения информации отчета по сканированию.
        /// </summary>
        /// <param name="report">Объект, содержащий данные о сканировании.</param>
        /// <returns>Строка информации отчета.</returns>
        private string CreateReport(ScanReport report)
        {
            StringBuilder reportBuilder = new StringBuilder("====== Scan result ======\n");
            reportBuilder.AppendLine("Processed files: " + report.GetAmount().ToString());
            foreach(var rule in ScanRules)
            {
                reportBuilder.AppendLine(rule.RuleName + " detected: " + report.GetAmountByRule(rule));
            }
            reportBuilder.AppendLine("Errors: " + report.GetAmountByType(FileReportType.Error).ToString());
            reportBuilder.AppendLine("Exection time: " + report.GetScanningTime());
            reportBuilder.AppendLine("=========================");
            return reportBuilder.ToString();
        }
    }
}
